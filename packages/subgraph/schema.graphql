type _Schema_
    @fulltext(
        name: "oracleTemplateSearch"
        language: en
        algorithm: rank
        include: [
            {
                entity: "OracleTemplateSpecification"
                fields: [{ name: "name" }, { name: "description" }]
            }
        ]
    )
    @fulltext(
        name: "kpiTokenTemplateSearch"
        language: en
        algorithm: rank
        include: [
            {
                entity: "KPITokenTemplateSpecification"
                fields: [{ name: "name" }, { name: "description" }]
            }
        ]
    )
    @fulltext(
        name: "kpiTokenSearch"
        language: en
        algorithm: rank
        include: [
            {
                entity: "KPITokenDescription"
                fields: [{ name: "title" }, { name: "description" }]
            }
        ]
    )

type Factory @entity {
    id: Bytes!
    owner: Bytes!
    kpiTokensManager: KPITokensManager!
    oraclesManager: OraclesManager!
    feeReceiver: Bytes!
    kpiTokensAmount: BigInt!
    permissionless: Boolean!
    allowedCreators: [Bytes!]!
}

type KPITokenTemplateSpecification @entity(immutable: true) {
    id: Bytes!
    name: String
    description: String
    tags: [String!]
    repository: String
    commitHash: String
    template: KPITokenTemplate! @derivedFrom(field: "specification")
}

type KPITokenTemplateSet @entity {
    id: Bytes!
    templates: [KPITokenTemplate!]! @derivedFrom(field: "templateSet")
    managerId: BigInt!
    active: Boolean!
    featuresOwner: Bytes!
    features: [KPITokenTemplateFeature!]! @derivedFrom(field: "templateSet")
    manager: KPITokensManager!
}

type KPITokenTemplate @entity {
    id: Bytes!
    address: Bytes!
    managerId: BigInt!
    version: BigInt!
    specificationCid: String!
    specification: KPITokenTemplateSpecification
    templateSet: KPITokenTemplateSet!
    kpiTokens: [KPIToken!]! @derivedFrom(field: "template")
}

type KPITokenTemplateFeature @entity {
    id: Bytes!
    featureId: BigInt!
    paused: Boolean!
    templateSet: KPITokenTemplateSet!
    allowed: [KPITokenTemplateFeatureAllowedAccount!]! @derivedFrom(field: "feature")
}

type KPITokenTemplateFeatureAllowedAccount @entity {
    id: Bytes!
    address: Bytes!
    feature: KPITokenTemplateFeature!
}

type KPITokensManager @entity {
    id: Bytes!
    factory: Factory! @derivedFrom(field: "kpiTokensManager")
    owner: Bytes!
    templateSets: [KPITokenTemplateSet!]! @derivedFrom(field: "manager")
    templatesAmount: BigInt!
}

type KPITokenDescription @entity(immutable: true) {
    id: Bytes!
    title: String
    description: String
    tags: [String!]
    kpiToken: KPIToken! @derivedFrom(field: "description")
}

type KPIToken @entity {
    id: Bytes!
    owner: Bytes!
    template: KPITokenTemplate!
    descriptionCid: String!
    description: KPITokenDescription
    finalized: Boolean!
    expiration: BigInt!
    creationTimestamp: BigInt!
    oracles: [Oracle!]! @derivedFrom(field: "kpiToken")
}

type OracleTemplateSpecification @entity(immutable: true) {
    id: Bytes!
    name: String
    description: String
    tags: [String!]
    repository: String
    commitHash: String
    template: OracleTemplate! @derivedFrom(field: "specification")
}

type OracleTemplateSet @entity {
    id: Bytes!
    templates: [OracleTemplate!]! @derivedFrom(field: "templateSet")
    managerId: BigInt!
    active: Boolean!
    featuresOwner: Bytes!
    features: [OracleTemplateFeature!]! @derivedFrom(field: "templateSet")
    manager: OraclesManager!
}

type OracleTemplate @entity {
    id: Bytes!
    address: Bytes!
    managerId: BigInt!
    version: BigInt!
    specificationCid: String!
    specification: OracleTemplateSpecification
    templateSet: OracleTemplateSet!
    oracles: [Oracle!]! @derivedFrom(field: "template")
}

type OracleTemplateFeature @entity {
    id: Bytes!
    featureId: BigInt!
    paused: Boolean!
    templateSet: OracleTemplateSet!
    allowed: [OracleTemplateFeatureAllowedAccount!]! @derivedFrom(field: "feature")
}

type OracleTemplateFeatureAllowedAccount @entity {
    id: Bytes!
    address: Bytes!
    feature: OracleTemplateFeature!
}

type OraclesManager @entity {
    id: Bytes!
    factory: Factory! @derivedFrom(field: "oraclesManager")
    owner: Bytes!
    templateSets: [OracleTemplateSet!]! @derivedFrom(field: "manager")
    templatesAmount: BigInt!
}

type Oracle @entity {
    id: Bytes!
    kpiToken: KPIToken!
    template: OracleTemplate!
    finalized: Boolean!
    result: BigInt
}

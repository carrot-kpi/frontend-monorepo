type _Schema_
    @fulltext(
        name: "oracleTemplateSearch"
        language: simple
        algorithm: rank
        include: [
            {
                entity: "OracleTemplateSpecification"
                fields: [{ name: "name" }, { name: "description" }]
            }
        ]
    )
    @fulltext(
        name: "kpiTokenTemplateSearch"
        language: simple
        algorithm: rank
        include: [
            {
                entity: "KPITokenTemplateSpecification"
                fields: [{ name: "name" }, { name: "description" }]
            }
        ]
    )
    @fulltext(
        name: "kpiTokenSearch"
        language: simple
        algorithm: rank
        include: [
            {
                entity: "KPITokenDescription"
                fields: [{ name: "title" }, { name: "description" }]
            }
        ]
    )

type Factory @entity {
    id: Bytes!
    owner: Bytes!
    kpiTokensManager: KPITokensManager
    oraclesManager: OraclesManager
    feeReceiver: Bytes!
    kpiTokensAmount: BigInt!
}

type KPITokensManager @entity {
    id: Bytes!
    owner: Bytes!
    templates: [KPITokenTemplate!]! @derivedFrom(field: "manager")
    templatesAmount: BigInt!
}

type OraclesManager @entity {
    id: Bytes!
    owner: Bytes!
    templates: [OracleTemplate!]! @derivedFrom(field: "manager")
    templatesAmount: BigInt!
}

type KPITokenTemplateSpecification @entity(immutable: true) {
    id: Bytes!
    name: String
    description: String
    tags: [String!]
    repository: String
    commitHash: String
    template: KPITokenTemplate! @derivedFrom(field: "specification")
}

type KPITokenTemplate @entity {
    id: Bytes!
    address: Bytes!
    managerId: BigInt!
    version: BigInt!
    specificationCid: String!
    specification: KPITokenTemplateSpecification!
    active: Boolean!
    manager: KPITokensManager!
    kpiTokens: [KPIToken!]! @derivedFrom(field: "template")
}

type OracleTemplateSpecification @entity(immutable: true) {
    id: Bytes!
    name: String
    description: String
    tags: [String!]
    repository: String
    commitHash: String
    template: OracleTemplate! @derivedFrom(field: "specification")
}

type OracleTemplate @entity {
    id: Bytes!
    address: Bytes!
    managerId: BigInt!
    version: BigInt!
    specificationCid: String!
    specification: OracleTemplateSpecification!
    active: Boolean!
    manager: OraclesManager!
    oracles: [Oracle!]! @derivedFrom(field: "template")
}

type Oracle @entity {
    id: Bytes!
    kpiToken: KPIToken!
    template: OracleTemplate!
    finalized: Boolean!
}

type KPITokenDescription @entity(immutable: true) {
    id: Bytes!
    title: String
    description: String
    tags: [String!]
    kpiToken: KPIToken! @derivedFrom(field: "description")
}

type KPIToken @entity {
    id: Bytes!
    owner: Bytes!
    template: KPITokenTemplate!
    descriptionCid: String!
    description: KPITokenDescription!
    finalized: Boolean!
    expiration: Int!
    creationTimestamp: Int!
    oracles: [Oracle!]! @derivedFrom(field: "kpiToken")
}

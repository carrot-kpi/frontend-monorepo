name: CI
on:
  push:
    branches:
      - develop
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - develop
      - main
  schedule:
    - cron: "0 0 * * *"
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
  WALLETCONNECT_PROJECT_ID: ${{ secrets.WALLETCONNECT_PROJECT_ID }}
  FATHOM_SITE_ID: ${{ secrets.FATHOM_SITE_ID }}
  FATHOM_API_KEY: ${{ secrets.FATHOM_API_KEY }}
  HUSKY: "0"
jobs:
  install:
    name: Install
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: "yarn"
      - name: Install dependencies
        run: yarn install --immutable --prefer-offline
      - name: Compress workspace artifact
        run: tar --create --use-compress-program='zstd -T0' --file=/tmp/workspace.tar.zst .
      - name: Upload workspace artifact
        uses: actions/upload-artifact@v3
        with:
          name: workspace
          path: /tmp/workspace.tar.zst
          retention-days: 1
  lint:
    name: Lint
    needs: install
    runs-on: ubuntu-20.04
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v3
        with:
          name: workspace
      - name: Extract workspace artifact
        run: tar --extract --use-compress-program='zstd -d' --file=workspace.tar.zst
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Run linter
        run: yarn lint
  unit-test:
    name: Unit test
    needs: install
    runs-on: ubuntu-20.04
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v3
        with:
          name: workspace
      - name: Extract workspace artifact
        run: tar --extract --use-compress-program='zstd -d' --file=workspace.tar.zst
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Run tests
        run: yarn test
  size-limit:
    name: Size limit
    needs: install
    runs-on: ubuntu-20.04
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v3
        with:
          name: workspace
      - name: Extract workspace artifact
        run: tar --extract --use-compress-program='zstd -d' --file=workspace.tar.zst
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Check size limit
        run: yarn size:limit
  e2e-test:
    name: Test e2e
    needs: install
    runs-on: ubuntu-22.04
    steps:
      - name: Download workspace artifact
        uses: actions/download-artifact@v3
        with:
          name: workspace
      - name: Extract workspace artifact
        run: tar --extract --use-compress-program='zstd -d' --file=workspace.tar.zst
      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: /home/runner/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.os }}-cypress
        continue-on-error: true
      - name: Install Linux deps
        run: sudo apt-get install --no-install-recommends -y fluxbox xvfb
      - name: Run e2e tests
        run: |
          Xvfb :0 -screen 0 1024x768x24 -listen tcp -ac &
          fluxbox &
          yarn test:e2e
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GH_USERNAME: ${{ secrets.GH_USERNAME }}
          DISPLAY: :0.0
  cleanup:
    name: Cleanup
    needs: [install, lint, unit-test, size-limit]
    runs-on: ubuntu-20.04
    steps:
      - name: Delete workspace artifact
        uses: geekyeggo/delete-artifact@v2
        with:
          name: workspace
